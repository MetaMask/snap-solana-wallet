name: Validate

on:
  workflow_call:
    secrets:
      RPC_URL_MAINNET_LIST:
        required: true
      RPC_URL_DEVNET_LIST:
        required: true
      RPC_URL_TESTNET_LIST:
        required: true
      RPC_URL_LOCALNET_LIST:
        required: true
      PRICE_API_BASE_URL:
        required: true
      LOCAL_API_BASE_URL:
        required: true
      TOKEN_API_BASE_URL:
        required: true
      STATIC_API_BASE_URL:
        required: true
      SECURITY_ALERTS_API_BASE_URL:
        required: true
      EXPLORER_BASE_URL:
        required: true

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
      - name: Install Yarn dependencies
        run: yarn --immutable

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - prepare
    env:
      ENVIRONMENT: production
      RPC_URL_MAINNET_LIST: ${{ secrets.RPC_URL_MAINNET_LIST }}
      RPC_URL_DEVNET_LIST: ${{ secrets.RPC_URL_DEVNET_LIST }}
      RPC_URL_TESTNET_LIST: ${{ secrets.RPC_URL_TESTNET_LIST }}
      RPC_URL_LOCALNET_LIST: ${{ secrets.RPC_URL_LOCALNET_LIST }}
      EXPLORER_BASE_URL: ${{ secrets.EXPLORER_BASE_URL }}
      PRICE_API_BASE_URL: ${{ secrets.PRICE_API_BASE_URL }}
      LOCAL_API_BASE_URL: ${{ secrets.LOCAL_API_BASE_URL }}
      TOKEN_API_BASE_URL: ${{ secrets.TOKEN_API_BASE_URL }}
      STATIC_API_BASE_URL: ${{ secrets.STATIC_API_BASE_URL }}
      SECURITY_ALERTS_API_BASE_URL: ${{ secrets.SECURITY_ALERTS_API_BASE_URL }}
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
      - run: yarn --immutable --immutable-cache || yarn install
      - run: |
          npm rebuild --verbose sharp
          yarn build
      - name: Save snap build
        uses: actions/upload-artifact@v4
        with:
          name: snap-build-${{ github.sha }}
          path: ./packages/snap/dist
          key: snap-${{ runner.os }}-${{ github.sha }}
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
      - run: yarn --immutable --immutable-cache || yarn install
      - run: yarn lint
      - name: Require clean working directory
        shell: bash
        run: |
          if ! git diff --exit-code; then
            echo "Working tree dirty at end of job"
            exit 1
          fi

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs:
      - prepare
    env:
      ENVIRONMENT: test
      RPC_URL_MAINNET_LIST: ${{ secrets.RPC_URL_MAINNET_LIST }}
      RPC_URL_DEVNET_LIST: ${{ secrets.RPC_URL_DEVNET_LIST }}
      RPC_URL_TESTNET_LIST: ${{ secrets.RPC_URL_TESTNET_LIST }}
      RPC_URL_LOCALNET_LIST: ${{ secrets.RPC_URL_LOCALNET_LIST }}
      EXPLORER_BASE_URL: ${{ secrets.EXPLORER_BASE_URL }}
      PRICE_API_BASE_URL: ${{ secrets.PRICE_API_BASE_URL }}
      LOCAL_API_BASE_URL: ${{ secrets.LOCAL_API_BASE_URL }}
      TOKEN_API_BASE_URL: ${{ secrets.TOKEN_API_BASE_URL }}
      STATIC_API_BASE_URL: ${{ secrets.STATIC_API_BASE_URL }}
      SECURITY_ALERTS_API_BASE_URL: ${{ secrets.SECURITY_ALERTS_API_BASE_URL }}
    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
      - run: yarn install --immutable
      - name: Build for tests
        run: yarn workspace @metamask/solana-wallet-snap build
      - name: Run tests
        run: yarn test
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tests-artifacts-coverage
          path: packages/snap/coverage
