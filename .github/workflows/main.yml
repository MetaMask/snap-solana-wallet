name: Main

on:
  push:
    branches: [main]

jobs:
  build-lint-test:
    name: Validate
    uses: ./.github/workflows/build-lint-test.yml

  sonarcloud:
    # Only scan code from non-forked repositories that have passed the tests
    # This will skip scanning the code for forks, but will run for the main repository on PRs from forks
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.repository.fork == false }}
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }} # Use the repository that triggered the workflow
          ref: ${{ github.event.workflow_run.head_branch }} # Use the branch that triggered the workflow
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: lcov.info
          path: coverage
          github-token: ${{ github.token }} # This is required when downloading artifacts from a different repository or from a different workflow run.
          run-id: ${{ github.event.workflow_run.id }} # Use the workflow id that triggered the workflow

      - name: Download sonar-project.properties
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: MetaMask/snap-solana-wallet
        run: |
          sonar_project_properties=$(gh api -H "Accept: application/vnd.github.raw" "repos/$REPOSITORY/contents/sonar-project.properties")
          if [ -z "$sonar_project_properties" ]; then
            echo "::error::sonar-project.properties not found in $REPOSITORY. Please make sure this file exists on the default branch."
            exit 1
          fi
          echo "$sonar_project_properties" > sonar-project.properties

      - name: SonarCloud Scan
        # This is SonarSource/sonarcloud-github-action@v2.0.0
        uses: SonarSource/sonarcloud-github-action@4b4d7634dab97dcee0b75763a54a6dc92a9e6bc1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pages:
    runs-on: ubuntu-latest
    needs: [build-lint-test]
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore snap build cache
        uses: actions/cache@v3
        with:
          path: ./packages/site/public
          key: site-${{ runner.os }}-${{ github.sha }}
          restore-keys: site-${{ runner.os }}-
      - name: Upload to Github Pages
        if: always()
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./packages/site/public
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2

  all-jobs-completed:
    name: All jobs completed
    runs-on: ubuntu-latest
    needs:
      - build-lint-test
    outputs:
      PASSED: ${{ steps.set-output.outputs.PASSED }}
    steps:
      - name: Set PASSED output
        id: set-output
        run: echo "PASSED=true" >> "$GITHUB_OUTPUT"

  all-jobs-pass:
    name: All jobs pass
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: all-jobs-completed
    steps:
      - name: Check that all jobs have passed
        run: |
          passed="${{ needs.all-jobs-completed.outputs.PASSED }}"
          if [[ $passed != "true" ]]; then
            exit 1
          fi

  is-release:
    # Filtering by `push` events ensures that we only release from the `main` branch, which is a
    # requirement for our npm publishing environment.
    # The commit author should always be 'github-actions' for releases created by the
    # 'create-release-pr' workflow, so we filter by that as well to prevent accidentally
    # triggering a release.
    if: github.event_name == 'push' && startsWith(github.event.head_commit.author.name, 'github-actions')
    needs: all-jobs-pass
    outputs:
      IS_RELEASE: ${{ steps.is-release.outputs.IS_RELEASE }}
    runs-on: ubuntu-latest
    steps:
      - uses: MetaMask/action-is-release@v1
        id: is-release

  publish-release:
    needs: is-release
    if: needs.is-release.outputs.IS_RELEASE == 'true'
    name: Publish release
    permissions:
      contents: write
    uses: ./.github/workflows/publish-release.yml
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
